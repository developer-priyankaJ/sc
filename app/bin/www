#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('scopehub.app');
var http = require('http');
var httpProxy = require('http-proxy');
var Util = require('util');
/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        // named pipe
        return val;
    }

    if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
    debug('Listening on ' + bind);
    Util.log('Insie server start');
    require('../lib/firebase_utils').init();

    /*
    * Currently working
    * */
    require('../jobs/load_csv_data_to_db_cron_job');
    require('../jobs/billing_line_item_daily_cron_job');
    require('../jobs/billing_line_item_monthly_cron_job');
    require('../jobs/sharing_data_cron_job');
    require('../jobs/import_orders_cron_job');
    require('../jobs/sharing_alert_cron_job');

    /*
    * Not working currently
    * */
    //require('../jobs/order_report_cron_job');
    //require('../jobs/remove_device_id_cron_job');
}

/**
 *  Webscoket proxy
 */

// var socketServer = httpProxy.createServer({
//   target: 'ws://localhost:3002',
//   ws: true
// },notification).listen(port);

// var io = require('socket.io')(socketServer);
